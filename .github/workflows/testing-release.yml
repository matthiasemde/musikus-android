name: TESTING-RELEASE

on:
  workflow_dispatch
env:
  JAVA_VERSION: 17
  UPLOAD_KEY_STORE_PATH: ${{ github.workspace }}/keystore.jks
  SERVICE_ACCOUNT_JSON_PATH: ${{ github.workspace }}/service-account.json
jobs:
  release:
    name: Release to play console closed testing track
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Get current version name
        run: |
          CURRENT_VERSION_NAME=$(grep "versionName" build.properties | cut -d'=' -f2)
          echo "current_version_name=${CURRENT_VERSION_NAME}" >> "$GITHUB_ENV"

      - name: Generate new version name using semver
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          fromTag: v${{ env.current_version_name }}
          noNewCommitBehavior: "silent"
          noVersionBumpBehavior: "patch"

      - name: Write version name, version code and tag name to env
        run: |
          VERSION_NAME=${${{ steps.semver.outputs.next }}#v}
          VERSION_CODE=$(date +"%y%V%u42")
          TAG_NAME="v${VERSION_NAME}"
          echo "version_name=${VERSION_NAME}" >> "$GITHUB_ENV"
          echo "version_code=${VERSION_CODE}" >> "$GITHUB_ENV"
          echo "tag_name=${TAG_NAME}" >> "$GITHUB_ENV"    

      - name: Write version name, version code, and commit hash to build.properties
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          sed -i -e "
            s/versionName=.*/versionName=$version_name/
            s/versionCode=.*/versionCode=$version_code/
            s/commitHash=.*/commitHash=$COMMIT_HASH/
          " build.properties   

      - name: Commit version bump and create tag
        run: |
          git config --global user.email "release-bot@musikus.app"
          git config --global user.name "Release Bot"
          git commit -am "chore: bump version to ${{ env.version_name }}"
          git tag $tag_name
          git push origin HEAD:main          
          git push origin $tag_name
        shell: bash

      - uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: gradle

      - name: Decode keystore
        env:
          ENCODED_STRING: ${{ secrets.UPLOAD_KEY_STORE_BASE64 }}
          UPLOAD_KEY_STORE_PATH: ${{ env.UPLOAD_KEY_STORE_PATH }}
        run: |
          echo $ENCODED_STRING | base64 --decode > $UPLOAD_KEY_STORE_PATH

      - name: Decode service account json
        env:
          ENCODED_STRING: ${{ secrets.SERVICE_ACCOUNT_JSON_BASE64 }}
        run: |
          echo $ENCODED_STRING | base64 --decode > $SERVICE_ACCOUNT_JSON_PATH

      - name: Build release bundle
        env:
          SIGNING_KEY_STORE_PATH: ${{ env.UPLOAD_KEY_STORE_PATH }}
          SIGNING_KEY_ALIAS: ${{ secrets.UPLOAD_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.UPLOAD_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.UPLOAD_STORE_PASSWORD }}
        run: ./gradlew bundleRelease

#      - name: Signing report
#        if: env.skip_release == 'false'
#        run: ./gradlew signingReport

      - name: Upload bundle to the Google Play Console alpha track
        if: env.skip_release == 'false'
        uses: r0adkll/upload-google-play@v1
        with:
          packageName: app.musikus
          serviceAccountJson: ${{ env.SERVICE_ACCOUNT_JSON_PATH }}
          releaseFiles: app/build/outputs/bundle/release/*.aab
          releaseName: ${{ env.TESTING_VERSION_NAME }}
          track: alpha
          status: draft
          changesNotSentForReview: true

